// <auto-generated by App.g.tt (t4 template file). />
<#@ template debug="false" hostspecific="false" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Collections.Generic" #> 
<#@ import namespace="System.IO" #>
<#@ import namespace="System.Linq" #>
<#@ output extension=".cs" #>
// Copyright 2022 - 2023 GZSkins, Inc. All rights reserved.
// Licensed under the Mozilla Public License, Version 2.0 (the "License.txt").
//
// This Source Code Form is subject to the terms of the Mozilla Public
// License, v. 2.0. If a copy of the MPL was not distributed with this
// file, You can obtain one at https://mozilla.org/MPL/2.0/.

namespace GZSkinsX.MainApp;

partial class StartUpClass
{
<#
    var appxDirectory = Path.Combine("src", "appx");
    var appxProjects = Directory.EnumerateFiles(appxDirectory,
        "GZSkinsX.Appx.*.csproj", SearchOption.AllDirectories);
#>
    /// <summary>
    /// 获取当前 Appx 引用程序集
    /// </summary>
    private static global::System.Collections.Generic.IEnumerable<global::System.Reflection.Assembly> GetAssemblies()
    {
        // Main Appx
        {
            // Self Assembly
            yield return typeof(global::GZSkinsX.MainApp.App).Assembly;
            // GZSkinsX.Api
            yield return typeof(global::GZSkinsX.Api.Appx.IAppxWindow).Assembly;
<#      foreach (var item in appxProjects)
        {
            var projName = Path.GetFileNameWithoutExtension(item);
            var className = string.Join(string.Empty, projName.Split('.').Skip(1));
#>
            // <#= projName #>
            yield return typeof(global::<#= projName #>.<#= className #>).Assembly;
<#
        }
#>
        }
    }
}
